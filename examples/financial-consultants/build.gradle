/*
 Project <PROJECT_NAME>

 Gradle build file for JaCaMo Applications
 <DATE>
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url "https://github.com/cleberjamaral/camel-artifact/raw/maven2" }
  maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
  maven { url "http://jacamo.sourceforge.net/maven2" }
  maven { url "http://jade.tilab.com/maven/" }
  flatDir { dirs 'lib' }
}

ext {
	versions = [
		camel       : '2.23.0',
	]
}

dependencies {
	compile group: 'org.jacamo', name: 'jacamo', version: '0.8-SNAPSHOT', changing: true, transitive: true
	// https://mvnrepository.com/artifact/commons-lang/commons-lang
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	// https://mvnrepository.com/artifact/org.apache.camel/camel-core
	compile group: 'org.apache.camel', name: 'camel-core', version: versions.camel
	// https://mvnrepository.com/artifact/org.apache.camel/camel-telegram
	compile group: 'org.apache.camel', name: 'camel-telegram', version: versions.camel
	// https://mvnrepository.com/artifact/javax.xml.soap/javax.xml.soap-api
	compile group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.4.0'
	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	// https://mvnrepository.com/artifact/javax.activation/activation
	compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	//To parse HTML
	compile 'org.jsoup:jsoup:1.10.2'

	//Jason for Apache Camel
	//compile files ('lib/jasonComponent-1.2.1.jar')
  compile group: 'org.jacamo-lang',     name: 'camel-jason' ,   version: '1.0'

	//Graphviz
	compile group: 'guru.nidi', name: 'graphviz-java', version: '0.7.0'
	//Log4j is used by camel
	compile group: 'org.springframework', name: 'spring-context', version: '5.0.10.RELEASE'
	//compile group: 'org.jacamo', name: 'jacamo-web', version: '0.1-SNAPSHOT', changing: true, transitive: true
	compile files ('../../build/libs/jacamo-web-0.1-SNAPSHOT.jar')
	//Java compiler
	compile group: 'net.openhft', name: 'compiler', version: '2.3.1'

	compile 'com.sun.xml.bind:jaxb-core:+'
	compile 'com.sun.xml.bind:jaxb-impl:+'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.27'
	compile 'org.glassfish.jersey.inject:jersey-hk2:2.27'
	compile 'org.glassfish.jersey:jersey-bom:2.27'
	compile 'org.glassfish.jersey.core:jersey-client:+'
	compile 'org.glassfish.jersey.media:jersey-media-multipart:2.27'
	compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.27'
	compile 'org.apache.zookeeper:zookeeper:3.5.4-beta'
	compile 'org.apache.curator:curator-framework:4.0.1'
	compile 'org.apache.curator:curator-x-async:4.0.1'
	compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}

configurations.all {
	resolutionStrategy {
		//force 'org.jacamo:cartago:2.4-DYN-SNAPSHOT'
		//force 'org.jacamo:jaca:2.4-SNAPSHOT'
}
}

sourceSets {
  main {
	  java {
		  srcDir 'src/env'
		  srcDir 'src/agt'
		  srcDir 'src/org'
		  srcDir 'src/java'
	  }
	  resources {
		  srcDir 'src/resources'
	  }
  }
}

task run (type: JavaExec, dependsOn: 'classes') {
  group       ' JaCaMo'
  description 'runs the JaCaMo application'
  doFirst {
	  mkdir 'log'
  }
  main 'jacamo.infra.JaCaMoLauncher'
  args 'financial.jcm'
  classpath sourceSets.main.runtimeClasspath
}


task uberJar(type: Jar, dependsOn: 'classes') {
  group      ' JaCaMo'
  description 'creates a single runnable jar file with all dependencies'

  manifest {
	  attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
  }
  baseName = 'jacamo-financial' // the name must start with jacamo so that jacamo...jar is found in the classpath
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  from (project.projectDir.absolutePath) {
	  include '**/*.asl'
	  include '**/*.xml'
	  include '**/*.jcm'
	  include '*.properties'
  }
  from (project.buildDir.absolutePath + '/jcm') {
	  include '**/*'
  }
  with jar

  doFirst {
	  copy {
		  from 'financial.jcm'
		  rename 'financial.jcm','default.jcm'
		  into project.buildDir.absolutePath + '/jcm'
	  }
  }
}

clean {
  delete 'bin'
  delete 'build'
  delete 'log'
}
